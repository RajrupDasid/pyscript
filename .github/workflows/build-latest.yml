name: '[CI] Build Latest'

on:
    push: # Only run on merges into main that modify files under pyscriptjs/
        branches:
        -   main
        paths:
        -   pyscriptjs/**
        -   .github/workflows/build-latest.yml # Test that workflow works when changed

    pull_request: # Run on any PR that modifies files in pyscriptjs/
        branches:
        -   main
        paths:
        -   pyscriptjs/**
        -   .github/workflows/build-latest.yml # Test that workflow works when changed

env:
    MINICONDA_PYTHON_VERSION: py38
    MINICONDA_VERSION: 4.11.0

defaults:
    run:
        working-directory: pyscriptjs

jobs:
    build:
        runs-on: ubuntu-latest
        steps:

        -   name: Checkout
            uses: actions/checkout@v3

        -   name: Install node
            uses: actions/setup-node@v3
            with:
                node-version: 18.x

        -   name: Cache node modules
            uses: actions/cache@v3
            env:
                cache-name: cache-node-modules
            with:
              # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
        -   name: Install miniconda
            run: |
                curl -L -O https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_PYTHON_VERSION}_${MINICONDA_VERSION}-Linux-x86_64.sh \
                && bash Miniconda3-${MINICONDA_PYTHON_VERSION}_${MINICONDA_VERSION}-Linux-x86_64.sh -b -p conda/

        -   name: Install dependencies
            run: |
                npm install
                make setup CONDA_EXE=conda/bin/conda

        -   name: Test pyscript
            run: make test

        -   name: Build pyscript
            run: make build

    deploy:
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/main' # Only deploy on merge into main
        permissions:
            contents: read
            id-token: write
        steps:
        # Deploy to S3
        -   name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v1.6.1
            with:
                aws-region: ${{secrets.AWS_REGION}}
                role-to-assume: ${{ secrets.AWS_OIDC_RUNNER_ROLE }}
        -   name: Sync to S3
            run: aws s3 sync --quiet ./examples/build/ s3://pyscript.net/unstable
